# Fragments ...................................................................
x-env: &env
  env_file:
    - .env

x-services-volume: &services-volume
  type: bind
  source: ./
  target: /platform

services:
  traefik:
    container_name: platform_proxy
    <<: *env
    networks:
      development:
        aliases:
          - ${DOCKER_URL}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - <<: *services-volume
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./.infrastructure/conf/traefik/dev/traefik.yml:/traefik.yml:ro
      - ./.infrastructure/conf/traefik/dev/traefik-certs.yml:/traefik-certs.yml
      - ./.infrastructure/conf/traefik/dev/certificates/:/certificates

  mysql:
    container_name: platform_database
    <<: *env
    environment:
      MYSQL_ROOT_PASSWORD: "${DOCKER_DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DOCKER_DB_DATABASE}"
      MYSQL_USER: "${DOCKER_DB_PASSWORD}"
      MYSQL_PASSWORD: "${DOCKER_DB_PASSWORD}"
    networks:
      - development
    ports:
      - "${DOCKER_PORT_MYSQL}:3306"
    volumes:
      - ./.infrastructure/conf/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./.infrastructure/volume_data/mysql/database_data/:/var/lib/mysql

  redis:
    container_name: platform_redis
    command: "redis-server --appendonly yes"
    networks:
      - development
    ports:
      - "6379:6379"
    volumes:
      - ./.infrastructure/volume_data/redis/data:/data

#   docs:
#     container_name: platform_docs
#     <<: *env
#     command: ["pnpm",  "--filter", "@platform/docs", "run", "docs:dev", "--port=${DOCKER_PORT_DOCS}","--host"]
#     labels:
#       - "traefik.enable=true"
#       - "traefik.http.routers.docs.rule=Host(`${DOCKER_URL_DOCS}`)"
#       - "traefik.http.routers.docs.entrypoints=websecure"
#       - "traefik.http.routers.docs.tls=true"
#       - "traefik.http.services.docs.loadbalancer.server.port=${DOCKER_PORT_DOCS}"
#       - "traefik.http.services.docs.loadbalancer.server.scheme=http"
#     volumes:
#       - <<: *services-volume
#     networks:
#       - development

  blank:
    container_name: platform_blank
    <<: *env
    build:
      context: .
      target: dev
   #  command: ["pnpm",  "--filter", "@platform/blank", "run", "build", "--watch"]
   #  command: "pnpm start"
    entrypoint: ["tail", "-f", "/dev/null"]
    environment:
      NODE_ENV: development
    volumes:
      - <<: *services-volume

  web:
    container_name: platform_web
    <<: *env
    build:
      context: .
      target: dev
   #  command: ["pnpm",  "--filter", "@platform/web", "run", "build", "--watch"]
   #  command: "pnpm start"
    entrypoint: ["tail", "-f", "/dev/null"]
    depends_on:
      traefik:
         condition: service_started
      blank:
         condition: service_started
         restart: true
    environment:
      NODE_ENV: development
    volumes:
      - <<: *services-volume

  application:
    container_name: platform_application
    <<: *env
    build:
      target: development
      args:
        USER_ID: ${SPIN_USER_ID}
        GROUP_ID: ${SPIN_GROUP_ID}
    depends_on:
      - traefik
    environment:
      - NGINX_WEBROOT="${DOCKER_PATH_WEBROOT}"
      - PHP_FPM_POOL_NAME="application-php-pool"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.application.rule=HostRegexp(`^(.+\\.)?${DOCKER_URL}$`)"
      - "traefik.http.routers.application.entrypoints=websecure"
      - "traefik.http.routers.application.tls=true"
      - "traefik.http.services.application.loadbalancer.server.port=${DOCKER_PORT_APP:-8080}"
      - "traefik.http.services.application.loadbalancer.server.scheme=http"
    networks:
      - development
    ports:
      - "${DOCKER_PORT_APP:-8080}:80"
      - "${DOCKER_PORT_VITE:-3000}:3000"
    volumes:
      - <<: *services-volume
    working_dir: ${DOCKER_PATH_APP}

  horizon:
    <<: *env
    container_name: platform_horizon
    build:
      target: development
      args:
        USER_ID: ${SPIN_USER_ID}
        GROUP_ID: ${SPIN_GROUP_ID}
    command: "php artisan horizon"
    environment:
      - PHP_FPM_POOL_NAME="horizon-php-pool"
    networks:
      - development
    stop_signal: SIGTERM
    volumes:
      - <<: *services-volume
    working_dir: ${DOCKER_PATH_APP}

  storage:
    container_name: platform_storage
    image: 'minio/minio:latest'
    environment:
        MINIO_ROOT_USER: ${DOCKER_STORAGE_USERNAME}
        MINIO_ROOT_PASSWORD: ${DOCKER_STORAGE_PASSWORD}
    ports:
        - '${DOCKER_PORT_STORAGE:-9000}:${DOCKER_PORT_STORAGE:-9000}'
        - '${DOCKER_PORT_STORAGE_CONSOLE:-8900}:${DOCKER_PORT_STORAGE_CONSOLE:-8900}'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.storage.rule=Host(`${DOCKER_URL_STORAGE}`)"
      - "traefik.http.routers.storage.entrypoints=websecure"
      - "traefik.http.routers.storage.tls=true"
      - "traefik.http.services.storage.loadbalancer.server.port=${DOCKER_PORT_STORAGE:-9000}"
      - "traefik.http.services.storage.loadbalancer.server.scheme=http"
    volumes:
        - ./.infrastructure/volume_data/storage/data:/data
    networks:
        - development
    depends_on:
       - traefik
       - application

    command: minio server /data/minio --console-address ":${DOCKER_PORT_STORAGE_CONSOLE}"

  mailpit:
    container_name: platform_email
    image: axllent/mailpit
    networks:
      - development
    ports:
        - '${DOCKER_PORT_EMAIL:-1025}:1025'
        - '${DOCKER_PORT_EMAIL_DASHBOARD:-8025}:8025'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailpit.rule=Host(`${DOCKER_URL_EMAIL}`)"
      - "traefik.http.routers.mailpit.entrypoints=websecure"
      - "traefik.http.routers.mailpit.tls=true"
      - "traefik.http.services.mailpit.loadbalancer.server.port=${DOCKER_PORT_EMAIL_DASHBOARD}"
      - "traefik.http.services.mailpit.loadbalancer.server.scheme=http"
    depends_on:
      - traefik

networks:
  development:
