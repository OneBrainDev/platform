# Fragments ...................................................................
x-env: &env
  env_file:
    - .env

x-services-volume: &services-volume
  type: bind
  source: ./
  target: /platform



services:
  # Application Containers ....................................................
  traefik:
    container_name: platform_proxy
    <<: *env
    networks:
      development:
        aliases:
          - ${DOCKER_URL}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - <<: *services-volume
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./.infrastructure/conf/traefik/dev/traefik.yml:/traefik.yml:ro
      - ./.infrastructure/conf/traefik/dev/traefik-certs.yml:/traefik-certs.yml
      - ./.infrastructure/conf/traefik/dev/certificates/:/certificates

  application:
    container_name: platform_application
    <<: *env
    build:
      target: development
      args:
        USER_ID: ${SPIN_USER_ID}
        GROUP_ID: ${SPIN_GROUP_ID}
    depends_on:
      - traefik
    environment:
      - NGINX_WEBROOT="${DOCKER_PATH_WEBROOT}"
      - PHP_FPM_POOL_NAME="application-php-pool"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.application.rule=HostRegexp(`${DOCKER_URL}`)"
      - "traefik.http.routers.application.entrypoints=websecure"
      - "traefik.http.routers.application.tls=true"
      - "traefik.http.services.application.loadbalancer.server.port=${DOCKER_PORT_APP}"
      - "traefik.http.services.application.loadbalancer.server.scheme=http"
    networks:
      - development
    ports:
      - "${DOCKER_PORT_APP}:80"
    volumes:
      - <<: *services-volume
    working_dir: ${DOCKER_PATH_APP}

  web:
    container_name: platform_frontend
    <<: *env
    build:
      context: .
      target: frontend
    command: ["pnpm", "build", "--emptyOutDir", "--watch"]
    depends_on:
      - traefik
    environment:
      NODE_ENV: development
    volumes:
      - <<: *services-volume

  # Database Containers .......................................................
  mysql:
    container_name: platform_database
    <<: *env
    environment:
      MYSQL_ROOT_PASSWORD: "${DOCKER_DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DOCKER_DB_DATABASE}"
      MYSQL_USER: "${DOCKER_DB_PASSWORD}"
      MYSQL_PASSWORD: "${DOCKER_DB_PASSWORD}"
    networks:
      - development
    ports:
      - "${DOCKER_PORT_MYSQL}:3306"
    volumes:
      - ./.infrastructure/conf/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./.infrastructure/volume_data/mysql/database_data/:/var/lib/mysql

  redis:
    container_name: platform_redis
    command: "redis-server --appendonly yes"
    networks:
      - development
    ports:
      - "${DOCKER_PORT_REDIS}:6379"
    volumes:
      - ./.infrastructure/volume_data/redis/data:/data

  # Infrastructure Containers .................................................

  # horizon:
  #   <<: *basephp
  #   container_name: platform_horizon
  #   command: "php artisan horizon"
  #   environment:
  #     - PHP_FPM_POOL_NAME="horizon-php-pool"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.horizon.rule=Host(`${DOCKER_HORIZON_URI}`)"
  #     - "traefik.http.routers.horizon.entrypoints=websecure"
  #     - "traefik.http.routers.horizon.tls=true"
  #     - "traefik.http.services.horizon.loadbalancer.server.port=${DOCKER_HORIZON_PORT}"
  #     - "traefik.http.services.horizon.loadbalancer.server.scheme=http"
  #   depends_on:
  #     - redis
  #     - api

  # minio:
  #   container_name: platform_storage
  #   image: 'minio/minio:latest'
  #   ports:
  #       - '${DOCKER_STORAGE_API_PORT}:${DOCKER_STORAGE_API_PORT}'
  #       - '${DOCKER_STORAGE_DISPLAY_PORT}:${DOCKER_STORAGE_DISPLAY_PORT}'
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.minio.rule=Host(`${DOCKER_STORAGE_URI}`)"
  #     - "traefik.http.routers.minio.entrypoints=websecure"
  #     - "traefik.http.routers.minio.tls=true"
  #     - "traefik.http.services.minio.loadbalancer.server.port=${DOCKER_STORAGE_API_PORT}"
  #     - "traefik.http.services.minio.loadbalancer.server.scheme=http"
  #   volumes:
  #       - ./.infrastructure/volume_data/minio/data:/data
  #   networks:
  #       - development
  #   command: minio server /data/minio --console-address ":${DOCKER_STORAGE_API_PORT}"

  # mailpit:
  #   container_name: platform_email
  #   image: axllent/mailpit
  #   networks:
  #     - development
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.mailpit.rule=Host(`${DOCKER_MAIL_URI}`)"
  #     - "traefik.http.routers.mailpit.entrypoints=websecure"
  #     - "traefik.http.routers.mailpit.tls=true"
  #     - "traefik.http.services.mailpit.loadbalancer.server.port=${DOCKER_MAIL_PORT}"
  #     - "traefik.http.services.mailpit.loadbalancer.server.scheme=http"
  #   depends_on:
  #     - traefik

  # docs:
  #   <<: *basefront
  #   container_name: platform_docs
  #   command: "pnpm --filter @platform/docs run docs:dev --port=${DOCKER_DOCS_PORT} --host"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.docs.rule=Host(`${DOCKER_DOCS_URL}`)"
  #     - "traefik.http.routers.docs.entrypoints=websecure"
  #     - "traefik.http.routers.docs.tls=true"
  #     - "traefik.http.services.docs.loadbalancer.server.port=${DOCKER_DOCS_PORT}"
  #     - "traefik.http.services.docs.loadbalancer.server.scheme=http"

  # design:
  #   <<: *basefront
  #   container_name: platform_design
  #   command: "pnpm --filter @platform/design run dev"

  # design-storybook:
  #   <<: *basefront
  #   container_name: platform_storybook
  #   command: "pnpm --filter @platform/design run storybook --no-open --disable-telemetry"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.design-storybook.rule=Host(`${DOCKER_DESIGN_URL}`)"
  #     - "traefik.http.routers.design-storybook.entrypoints=websecure"
  #     - "traefik.http.routers.design-storybook.tls=true"
  #     - "traefik.http.services.design-storybook.loadbalancer.server.port=${DOCKER_DESIGN_PORT}"
  #     - "traefik.http.services.design-storybook.loadbalancer.server.scheme=http"

networks:
  development:
