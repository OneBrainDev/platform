############################################
# Fragments
# docs.docker.com/compose/compose-file/10-fragments/
############################################

x-basefront: &basefront
  working_dir: /platform/frontend
  volumes:
    - ./frontend:/platform/frontend:cached
  networks:
    - development

x-basephp: &basephp
  working_dir: /platform/backend
  build:
    target: development
    args:
      USER_ID: ${SPIN_USER_ID}
      GROUP_ID: ${SPIN_GROUP_ID}
  volumes:
    - ./backend:/platform/backend
  environment:
    - NGINX_WEBROOT=/platform/backend/public
  networks:
    - development

services:

############################################
# Frontend
############################################
  docs:
    <<: *basefront
    command: "pnpm --filter @platform/docs run docs:dev --port=3010 --host"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.docs.rule=Host(`docs.platform.test`)"
      - "traefik.http.routers.docs.entrypoints=websecure"
      - "traefik.http.routers.docs.tls=true"
      - "traefik.http.services.docs.loadbalancer.server.port=3010"
      - "traefik.http.services.docs.loadbalancer.server.scheme=http"

  design:
    <<: *basefront
    command: "pnpm --filter @platform/design run dev"

  design-storybook:
    <<: *basefront
    command: "pnpm --filter @platform/design run storybook --no-open --disable-telemetry"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.design-storybook.rule=Host(`design.platform.test`)"
      - "traefik.http.routers.design-storybook.entrypoints=websecure"
      - "traefik.http.routers.design-storybook.tls=true"
      - "traefik.http.services.design-storybook.loadbalancer.server.port=6006"
      - "traefik.http.services.design-storybook.loadbalancer.server.scheme=http"

  web:
    <<: *basefront
    command: "pnpm --filter @platform/web run dev"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`platform.test`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls=true"
      - "traefik.http.services.web.loadbalancer.server.port=3000"
      - "traefik.http.services.web.loadbalancer.server.scheme=http"

############################################
# Backends
############################################

  backend:
    <<: *basephp
    environment:
      - PHP_FPM_POOL_NAME="platform-php-pool"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=HostRegexp(`api.platform.test`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
      - "traefik.http.services.backend.loadbalancer.server.scheme=http"

  horizon:
    <<: *basephp
    command: "php artisan horizon"
    environment:
      - PHP_FPM_POOL_NAME="horizon-php-pool"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.horizon.rule=Host(`horizon.platform.test`)"
      - "traefik.http.routers.horizon.entrypoints=websecure"
      - "traefik.http.routers.horizon.tls=true"
      - "traefik.http.services.horizon.loadbalancer.server.port=8080"
      - "traefik.http.services.horizon.loadbalancer.server.scheme=http"

############################################
# Infrastructure
############################################
  traefik:
    networks:
      development:
        aliases:
          - platform.test
    ports:
      - "80:80"
      - "443:443"
      - "9003:9003"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./.infrastructure/conf/traefik/dev/traefik.yml:/traefik.yml:ro
      - ./.infrastructure/conf/traefik/dev/traefik-certs.yml:/traefik-certs.yml
      - ./.infrastructure/conf/traefik/dev/certificates/:/certificates

  mysql:
    volumes:
      - ./.infrastructure/conf/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./.infrastructure/volume_data/mysql/database_data/:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "rootpassword"
      MYSQL_DATABASE: "platform_backend"
      MYSQL_USER: "mysqluser"
      MYSQL_PASSWORD: "mysqlpassword"
    ports:
      - "3306:3306"
    networks:
      - development

  redis:
    command: "redis-server --appendonly yes"
    volumes:
      - ./.infrastructure/volume_data/redis/data:/data
    ports:
      - "6379:6379"
    networks:
      - development

  minio:
    image: 'minio/minio:latest'
    ports:
        - '8750:8750'
        - '8900:8900'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.platform.test`)"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.services.minio.loadbalancer.server.port=8750"
      - "traefik.http.services.minio.loadbalancer.server.scheme=http"
    volumes:
        - ./.infrastructure/volume_data/minio/data:/data
    networks:
        - development
    command: minio server /data/minio --console-address ":8750"

  mailpit:
      image: axllent/mailpit
      networks:
        - development
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.mailpit.rule=Host(`mail.platform.test`)"
        - "traefik.http.routers.mailpit.entrypoints=websecure"
        - "traefik.http.routers.mailpit.tls=true"
        - "traefik.http.services.mailpit.loadbalancer.server.port=8025"
        - "traefik.http.services.mailpit.loadbalancer.server.scheme=http"
      depends_on:
        - traefik

networks:
  development:
